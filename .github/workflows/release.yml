name: Release Build

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.platform }} (${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux x64
          - os: ubuntu-latest
            platform: linux
            arch: x64
            target: x86_64-unknown-linux-gnu
            binary_name: spn
            asset_name: spn-linux-x64
          
          # Linux ARM64
          - os: ubuntu-latest
            platform: linux
            arch: arm64
            target: aarch64-unknown-linux-gnu
            binary_name: spn
            asset_name: spn-linux-arm64
          
          # macOS x64
          - os: macos-latest
            platform: macos
            arch: x64
            target: x86_64-apple-darwin
            binary_name: spn
            asset_name: spn-macos-x64
          
          # macOS ARM64
          - os: macos-latest
            platform: macos
            arch: arm64
            target: aarch64-apple-darwin
            binary_name: spn
            asset_name: spn-macos-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross-compilation tools (Linux ARM64)
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare binary
        run: |
          cp target/${{ matrix.target }}/release/${{ matrix.binary_name }} ${{ matrix.asset_name }}
          chmod +x ${{ matrix.asset_name }}

      - name: Upload binary to release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ matrix.asset_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-crates:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Publish to crates.io
        run: cargo publish --token ${{ secrets.CARGO_TOKEN }}
        continue-on-error: true
