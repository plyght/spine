# Package Manager Configuration File for Spine
# Each section defines a package manager with its commands

# Auto-update settings
[auto_update]
enabled = false                    # Set to true to enable automatic background updates
schedule = "daily"                 # "daily" or "weekly" 
time = "18:00"                     # Time to run (24h format)
day = "monday"                     # Day for weekly updates (monday, tuesday, etc.)
notify = true                      # Send notification when complete
no_tui = true                      # Run without interactive TUI

[managers.brew]
name = "Homebrew"
check_command = "brew --version"
refresh = "brew update"
self_update = "brew update"
upgrade_all = "brew upgrade"
cleanup = "brew cleanup"
requires_sudo = false

[managers.apt]
name = "APT"
check_command = "apt --version"
refresh = "apt update"
upgrade_all = "apt upgrade -y"
cleanup = "apt autoremove -y && apt autoclean"
requires_sudo = true

[managers.yum]
name = "YUM"
check_command = "yum --version"
refresh = "yum check-update"
upgrade_all = "yum update -y"
cleanup = "yum autoremove -y && yum clean all"
requires_sudo = true

[managers.dnf]
name = "DNF"
check_command = "dnf --version"
refresh = "dnf check-update"
upgrade_all = "dnf upgrade -y"
cleanup = "dnf autoremove -y && dnf clean all"
requires_sudo = true

[managers.pacman]
name = "Pacman"
check_command = "pacman --version"
refresh = "pacman -Sy"
upgrade_all = "pacman -Syu --noconfirm"
cleanup = "pacman -Sc --noconfirm"
requires_sudo = true

[managers.zypper]
name = "Zypper"
check_command = "zypper --version"
refresh = "zypper refresh"
upgrade_all = "zypper update -y"
cleanup = "zypper clean -a"
requires_sudo = true

[managers.emerge]
name = "Portage"
check_command = "emerge --version"
refresh = "emerge --sync"
upgrade_all = "emerge -uDN @world"
cleanup = "emerge --depclean"
requires_sudo = true

[managers.nix]
name = "Nix"
check_command = "nix --version"
refresh = "nix-channel --update"
self_update = "nix upgrade-nix"
upgrade_all = "nix-env -u"
cleanup = "nix-collect-garbage -d"
requires_sudo = false

[managers.snap]
name = "Snap"
check_command = "snap version"
refresh = "snap refresh"
upgrade_all = "snap refresh"
requires_sudo = true

[managers.flatpak]
name = "Flatpak"
check_command = "flatpak --version"
refresh = "flatpak update"
upgrade_all = "flatpak update -y"
cleanup = "flatpak uninstall --unused -y"
requires_sudo = false

[managers.port]
name = "MacPorts"
check_command = "port version"
refresh = "port sync"
self_update = "port selfupdate"
upgrade_all = "port upgrade outdated"
cleanup = "port uninstall inactive"
requires_sudo = true

[managers.pkg]
name = "FreeBSD Packages"
check_command = "pkg version"
refresh = "pkg update"
upgrade_all = "pkg upgrade -y"
cleanup = "pkg autoremove -y && pkg clean"
requires_sudo = true

[managers.apk]
name = "Alpine Package Keeper"
check_command = "apk --version"
refresh = "apk update"
upgrade_all = "apk upgrade"
cleanup = "apk cache clean"
requires_sudo = true

[managers.xbps]
name = "XBPS"
check_command = "xbps-query --version"
refresh = "xbps-install -S"
upgrade_all = "xbps-install -Su"
cleanup = "xbps-remove -O"
requires_sudo = true

[managers.npm]
name = "npm"
check_command = "npm --version"
refresh = "npm update -g"
self_update = "npm install -g npm@latest"
upgrade_all = "npm update -g"
cleanup = "npm cache clean --force"
requires_sudo = false

[managers.yarn]
name = "Yarn"
check_command = "yarn --version"
refresh = "yarn global upgrade"
self_update = "yarn set version latest"
upgrade_all = "yarn global upgrade"
requires_sudo = false

[managers.pnpm]
name = "pnpm"
check_command = "pnpm --version"
refresh = "pnpm update -g"
self_update = "pnpm add -g pnpm"
upgrade_all = "pnpm update -g"
requires_sudo = false

[managers.pip]
name = "pip"
check_command = "pip --version"
refresh = "pip index versions pip"
self_update = "python -m pip install --upgrade pip"
upgrade_all = "python -m pip install --upgrade pip setuptools wheel"
requires_sudo = false

[managers.pip3]
name = "pip3"
check_command = "pip3 --version"
refresh = "pip3 index versions pip"
self_update = "python3 -m pip install --upgrade pip"
upgrade_all = "python3 -m pip install --upgrade pip setuptools wheel"
requires_sudo = false

[managers.rustup]
name = "Rustup"
check_command = "rustup --version"
refresh = "rustup check"
self_update = "rustup self update"
upgrade_all = "rustup update"
requires_sudo = false

[managers.cargo]
name = "Cargo"
check_command = "cargo --version"
refresh = "cargo search --limit 0"
upgrade_all = "cargo update"
requires_sudo = false

[managers.composer]
name = "Composer"
check_command = "composer --version"
refresh = "composer outdated"
self_update = "composer self-update"
upgrade_all = "composer global update"
requires_sudo = false

[managers.gem]
name = "RubyGems"
check_command = "gem --version"
refresh = "gem outdated"
self_update = "gem update --system"
upgrade_all = "gem update"
cleanup = "gem cleanup"
requires_sudo = false

[managers.go]
name = "Go modules"
check_command = "go version"
refresh = "go list -u -m all"
upgrade_all = "go get -u all"
requires_sudo = false

[managers.conda]
name = "Conda"
check_command = "conda --version"
refresh = "conda list --outdated"
self_update = "conda update conda"
upgrade_all = "conda update --all"
cleanup = "conda clean --all"
requires_sudo = false

[managers.scoop]
name = "Scoop"
check_command = "scoop --version"
refresh = "scoop update"
self_update = "scoop update scoop"
upgrade_all = "scoop update *"
cleanup = "scoop cleanup *"
requires_sudo = false

[managers.bun]
name = "Bun"
check_command = "bun --version"
refresh = "bun update"
self_update = "bun upgrade"
upgrade_all = "bun update"
cleanup = "bun pm cache rm"
requires_sudo = false